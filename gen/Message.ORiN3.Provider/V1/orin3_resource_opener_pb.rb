# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: V1/orin3_resource_opener.proto

require 'google/protobuf'

require 'V1/orin3_common_type_pb'


descriptor_data = "\n\x1eV1/orin3_resource_opener.proto\x12\x16Message.ORiN3.Provider\x1a\x1aV1/orin3_common_type.proto\"b\n\x0bOpenRequest\x12\x35\n\x06\x63ommon\x18\x01 \x01(\x0b\x32%.Message.ORiN3.Provider.CommonRequest\x12\n\n\x02id\x18\x02 \x01(\x0c\x12\x10\n\x08\x61rgument\x18\x03 \x01(\x0c\"F\n\x0cOpenResponse\x12\x36\n\x06\x63ommon\x18\x01 \x01(\x0b\x32&.Message.ORiN3.Provider.CommonResponse\"c\n\x0c\x43loseRequest\x12\x35\n\x06\x63ommon\x18\x01 \x01(\x0b\x32%.Message.ORiN3.Provider.CommonRequest\x12\n\n\x02id\x18\x02 \x01(\x0c\x12\x10\n\x08\x61rgument\x18\x03 \x01(\x0c\"G\n\rCloseResponse\x12\x36\n\x06\x63ommon\x18\x01 \x01(\x0b\x32&.Message.ORiN3.Provider.CommonResponse2\xc0\x01\n\x15ResourceOpenerService\x12Q\n\x04Open\x12#.Message.ORiN3.Provider.OpenRequest\x1a$.Message.ORiN3.Provider.OpenResponse\x12T\n\x05\x43lose\x12$.Message.ORiN3.Provider.CloseRequest\x1a%.Message.ORiN3.Provider.CloseResponseBw\xaa\x02\x36Message.ORiN3.Provider.V1.AutoGenerated.ResourceOpener\xea\x02;Message::ORiN3::Provider::V1::AutoGenerated::ResourceOpenerb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Message
  module ORiN3
    module Provider
      module V1
        module AutoGenerated
          module ResourceOpener
            OpenRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Message.ORiN3.Provider.OpenRequest").msgclass
            OpenResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Message.ORiN3.Provider.OpenResponse").msgclass
            CloseRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Message.ORiN3.Provider.CloseRequest").msgclass
            CloseResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Message.ORiN3.Provider.CloseResponse").msgclass
          end
        end
      end
    end
  end
end
