require_relative '../../../../../gen/Design.ORiN3.Common/V1/orin3_common_pb'
require_relative '../../../../../gen/Message.ORiN3.Provider/V1/orin3_base_object_pb'
require_relative '../../../../../gen/Message.ORiN3.Provider/V1/orin3_base_object_services_pb'

module O3
  include Design::ORiN3::Common::V1::AutoGenerated
  include Message::ORiN3::Provider::V1::AutoGenerated::BaseObject
end

module Grpc
  module ORiN3
    module Client
      module Provider
        class ORiN3BaseObject
          attr_reader :id
          attr_reader :orin3_object_type
          attr_reader :created_datetime
          attr_reader :name
          attr_reader :type_name
          attr_reader :option

          def initialize(channel, id)
            @channel = channel
            @id = id

            sut = O3::BaseObjectService::Stub.new(nil, :this_channel_is_insecure, channel_override: @channel)
            request = O3::GetObjectInfoRequest.new(common: O3::CommonRequest.new, id: @id)
            response = sut.get_object_info(request)

            # $logger.info "Result code: #{response.common.resultCode}"
            # $logger.info "Detail: #{response.common.detail}"
            @name = response.name
            @type_name = response.typeName
            @option = response.option
            @created_datetime =  Grpc::ORiN3::Provider::DateTimeConverter.from_int64(response.createdDateTime)
            @orin3_object_type = Grpc::ORiN3::Provider::ORiN3ObjectType.from_i(response.objectType)
            @extra = response.extra
          end

          def get_tag(key)
          end

          def set_tag(key, tag)
          end

          def get_tag_keys
          end

          def remove_tag(key)
          end

          def get_status
          end

          def execute(command_name)
          end

          def execute(command_name, argument)
          end
        end
      end
    end
  end
end